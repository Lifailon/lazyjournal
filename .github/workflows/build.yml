name: CI

on:
  workflow_dispatch:
    inputs:
      Distro:
        description: 'Select a distribution'
        required: true
        default: 'ubuntu-20.04'
        type: choice
        options:
          - 'ubuntu-20.04'
          - 'ubuntu-24.04'
          - 'macos-15'
      Binary:
        description: 'Build binary'
        required: true
        default: false
        type: boolean
      Golangci:
        description: 'Golangci linter check'
        required: true
        default: true
        type: boolean
      Gocritic:
        description: 'Critic linter check'
        required: true
        default: true
        type: boolean
      Gosec:
        description: 'Security linter check'
        required: true
        default: true
        type: boolean
      TMUX:
        description: 'Interface testing'
        required: true
        default: true
        type: boolean
      Timeout:
        description: 'Timeout for interface testing'
        required: true
        default: 5
        type: number

jobs:
  build:
    runs-on: ${{ github.event.inputs.Distro }}

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Check versions
        run: |
          go version
          echo "GLIBC version: $(ldd --version | head -n 1 | sed -r 's/.+\)\s//')"

      - name: Install dependencies
        run: |
          go fmt ./...
          go vet ./...
          go mod tidy
          go mod verify
          go build -v ./...

      - name: Golangci linter check
        if: ${{ github.event.inputs.Golangci }}
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          golangci-lint run ./...

      - name: Critic linter check
        if: ${{ github.event.inputs.Gocritic }}
        run: |
          go install github.com/go-critic/go-critic/cmd/gocritic@latest
          gocritic check -enableAll ./...

      - name: Security linter check
        if: ${{ github.event.inputs.Gosec }}
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec -severity=high ./...

      - name: Install tmux for macOS
        if: ${{ github.event.inputs.Distro == 'macos-15' && github.event.inputs.TMUX == 'true' }}
        run: brew install tmux

      - name: Start Docker container for test in Ubuntu
        if: ${{ github.event.inputs.Distro != 'macos-15' && github.event.inputs.TMUX == 'true' }}
        run: docker run -d --name pinguem -p 8085:8085 -p 3005:3005 lifailon/pinguem:latest

      - name: Interface testing
        if: ${{ github.event.inputs.TMUX }}
        run: |
          tmux -V
          chmod +x test.sh
          bash test.sh ${{ github.event.inputs.Timeout }} true

      - name: Build binaries
        if: ${{ github.event.inputs.Binary }}
        run: |
          version=$(cat main.go | grep Version: | awk -F '"' '{print $4}')
          echo "Get version from main.go: $version"
          mkdir -p bin
          architectures=("amd64" "arm64")
          for arch in "${architectures[@]}"; do
              GOOS=linux GOARCH=$arch go build -o bin/lazyjournal-$version-linux-$arch
              GOOS=darwin GOARCH=$arch go build -o bin/lazyjournal-$version-darwin-$arch
              GOOS=openbsd GOARCH=$arch go build -o bin/lazyjournal-$version-openbsd-$arch
              GOOS=freebsd GOARCH=$arch go build -o bin/lazyjournal-$version-freebsd-$arch
              GOOS=windows GOARCH=$arch go build -o bin/lazyjournal-$version-windows-$arch.exe
          done
          ls -lh bin
          echo "ARTIFACT_NAME=lazyjournal-$(date +'%d.%m.%Y')" >> $GITHUB_ENV

      - name: Upload binaries
        if: ${{ github.event.inputs.Binary }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: bin/
