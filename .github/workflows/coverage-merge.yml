name: CI

on:
  workflow_dispatch:

jobs:
  ubuntu_test:
    runs-on: ubuntu-24.04

    steps:
      - name: Clone main repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Install dependencies
        run: |
          go fmt ./...
          go vet ./...
          go mod tidy
          go mod verify
          go build -v ./...

      - name: Start docker container for test in Ubuntu
        if: ${{ 
            (github.event.inputs.testFunctions == 'true' && github.event.inputs.Distro != 'macos-15') || 
            (github.event.inputs.testInterface == 'true' && github.event.inputs.Distro != 'macos-15')
          }}
        run: |
          docker run -d --name pinguem -p 8085:8085 -p 3005:3005 lifailon/pinguem:latest
          docker run -d --name TorAPI -p 8443:8443 lifailon/torapi:latest

      - name: Create pcap files
        if: ${{ github.event.inputs.testFunctions == 'true' }}
        run: |
          sudo tcpdump -i any -c 1 -w test.pcap
          gzip -c test.pcap > test.pcap.gz
          sudo tcpdump -i any -c 1 -w test.pcapng
          gzip -c test.pcapng > test.pcapng.gz
          ls -lh
        continue-on-error: true

      - name: Run test in Linux
        if: ${{ github.event.inputs.testFunctions == 'true' }}
        run: sudo go test -v -cover -coverprofile coverage-linux.out
        continue-on-error: true

      - name: Create markdown report
        if: ${{ github.event.inputs.testFunctions == 'true' }}
        run: cat test-report.md >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Upload coverage report for Linux
        uses: actions/upload-artifact@v4
        with:
          name: coverage-linux
          path: coverage-linux.out

  windows_test:
    runs-on: windows-2022
    steps:
      - name: Clone main repository
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Install dependencies
        run: |
          go fmt ./...
          go vet ./...
          go mod tidy
          go mod verify
          go build -v ./...

      - name: Run test in Windows
        run: go test -v --run TestWinEvents -cover -coverprofile coverage-windows.out
        continue-on-error: true

      - name: Create markdown report
        if: ${{ github.event.inputs.testFunctions == 'true' }}
        run: cat test-report.md >> $GITHUB_STEP_SUMMARY
        continue-on-error: true

      - name: Upload coverage report for Windows
        uses: actions/upload-artifact@v4
        with:
          name: coverage-windows
          path: coverage-windows.out

  merge_coverage:
    runs-on: ubuntu-latest
    needs: [ubuntu_test, windows_test]
    steps:
      - name: Download coverage report for Linux
        uses: actions/download-artifact@v4
        with:
          name: coverage-linux
          path: .

      - name: Download coverage report for Windows
        uses: actions/download-artifact@v4
        with:
          name: coverage-windows
          path: .

      - name: Install go coverage merge
        run: go install github.com/wadey/gocovmerge@latest

      - name: Merge coverage reports
        run: |
          gocovmerge coverage-linux.out coverage-windows.out > merge-coverage.out
          go tool cover -func merge-coverage.out
      
      - name: Update merge coverage report
        uses: ncruces/go-coverage-report@v0
        with:
          coverage-file: merge-coverage.out
          report: true
          chart: true
          amend: true
        continue-on-error: true